<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.2//EN" "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">
<!-- 
Copyright 2011 Vecna Technologies, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<module name="Checker">
    <module name="TreeWalker">
        <!-- Code conventions -->

        <!-- Naming conventions -->
        <module name="ConstantName">
            <!-- Vecna customization: need to allow either FOO_BAR format,
                 or s_foo format -->
            <property name="format" value="^((s_[a-z][0-9a-zA-Z]*)|([A-Z][A-Z0-9]*(_[A-Z0-9]+)*))$"/>
            <property name="severity" value="warning"/>
        </module>
        <module name="LocalFinalVariableName">
            <property name="severity" value="error"/>
        </module>
        <module name="LocalVariableName">
            <property name="severity" value="error"/>
        </module>
        <module name="MemberName">
            <!-- Vecna extension -->
            <property name="format" value="m_[a-z][0-9a-zA-Z]*"/>
            <property name="severity" value="error"/>
        </module>
        <module name="MethodName">
            <property name="severity" value="error"/>
        </module>
        <module name="PackageName">
            <property name="severity" value="error"/>
        </module>
        <module name="ParameterName">
            <property name="severity" value="error"/>
        </module>
        <module name="StaticVariableName">
            <!-- Vecna extension -->
            <property name="format" value="s_[a-z][0-9a-zA-Z]*"/>
            <property name="severity" value="error"/>
        </module>
        <module name="TypeName">
            <property name="severity" value="error"/>
        </module>

        <!-- Code layout -->
        <module name="LeftCurly">
            <property name="severity" value="error"/>
        </module>
        <module name="RightCurly">
            <property name="severity" value="error"/>
        </module>
        <module name="NeedBraces">
            <property name="severity" value="error"/>
        </module>
        <module name="OperatorWrap">
            <property name="severity" value="error"/>
        </module>
        <module name="ParenPad">
            <property name="severity" value="error"/>
        </module>
        <module name="NoWhitespaceAfter">
            <!-- Allow whitespace after cast, for Eclipse Checkstyle plugin-->
            <property name="tokens" value="ARRAY_INIT, BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS, UNARY_PLUS"/>
            <property name="severity" value="error"/>
        </module>
        <module name="NoWhitespaceBefore">
            <property name="severity" value="error"/>
        </module>
        <!-- don't require whitespace after cast -->
        <module name="WhitespaceAfter">
            <property name="tokens" value="COMMA, SEMI"/>
            <property name="severity" value="error"/>
        </module>
        <module name="WhitespaceAround">
	    <property name="tokens" value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_ASSERT, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, RCURLY, SL, SLIST, SL_ASSIGN, SR, SR_ASSIGN, STAR, STAR_ASSIGN, TYPE_EXTENSION_AND"/>
            <property name="severity" value="error"/>
        </module>

        <!-- JavaDoc guidelines -->
        <module name="JavadocMethod">
            <!-- Vecna extension: allow documenting undeclared RTE -->
            <property name="scope" value="protected"/>
            <property name="severity" value="error"/>
            <property name="allowMissingPropertyJavadoc" value="true"/>
            <property name="allowUndeclaredRTE" value="true"/>
            <property name="allowThrowsTagsForSubclasses" value="true"/>
        </module>
        <!-- Vecna extension: require author tag: name -->
        <module name="JavadocType">
            <property name="authorFormat" value="[a-z]+@vecna.com"/>
            <property name="severity" value="error"/>
        </module>
        <module name="JavadocVariable">
            <property name="scope" value="public"/>
            <property name="severity" value="warning"/>
        </module>

        <!-- JLS -->
        <module name="ModifierOrder">
            <property name="severity" value="error"/>
        </module>
        <!-- Vecna modification: don't care about redundant public in interface defs -->
        <module name="RedundantModifier">
            <property name="tokens" value="VARIABLE_DEF"/>
            <property name="severity" value="error"/>
        </module>
        <module name="UpperEll">
            <property name="severity" value="error"/>
        </module>

        <!-- API Doc -->
        <module name="EqualsHashCode">
            <property name="severity" value="error"/>
        </module>

        <!-- don't create new instances of Boolean,
             use Boolean.TRUE/FALSE or Boolean.valueOf() instead -->
        <module name="IllegalInstantiation">
             <property name="classes" value="java.lang.Boolean, java.util.GregorianCalendar"/>
            <property name="severity" value="error"/>
        </module>

        <module name="LineLength">
          <property name="max" value="132"/>
          <property name="severity" value="warning"/>
        </module>

        <!-- best practices -->
        <!-- don't allow empty blocks (in particular catch blocks) -->
        <module name="EmptyBlock">
            <property name="severity" value="warning"/>
        </module>
        <!-- avoid innter assignments -->
        <module name="InnerAssignment">
            <property name="severity" value="warning"/>
        </module>
        <!-- don't allow imports from the sun.* package hierarchy -->
        <module name="IllegalImport">
            <property name="severity" value="error"/>
        </module>
         <!-- don't allow public members -->
        <module name="VisibilityModifier">
            <property name="severity" value="error"/>
            <property name="protectedAllowed" value="true"/>
        </module>
        <!-- simplify your code -->
        <module name="RedundantImport">
            <property name="severity" value="error"/>
        </module>
        <module name="UnusedImports">
            <property name="severity" value="error"/>
        </module>
        <module name="SimplifyBooleanExpression">
            <property name="severity" value="error"/>
        </module>
        <module name="SimplifyBooleanReturn">
            <property name="severity" value="error"/>
        </module>

        <!-- flag reminder comments -->
        <module name="TodoComment">
            <property name="severity" value="warning"/>
        </module>

        <!-- enforce default length limits -->
        <module name="MethodLength">
            <property name="severity" value="error"/>
        </module>

        <!-- OTHER VECNA EXTENSIONS -->

        <module name="AvoidStarImport"> 
            <property name="excludes" value="java.util"/>
            <property name="severity" value="error"/>
        </module>
<!-- Some problem where is complains imports are in wrong group
        <module name="ImportOrder">
            <property name="groups" value="java, javax, org.apache"/>
            <property name="severity" value="warning"/>
        </module>
-->

    </module>

    <module name="Header">
      <property name="headerFile" value="${checkstyle.header.file}"/>
      <property name="severity" value="error"/>
      <property name="fileExtensions" value="java"/>
    </module>

    <module name="FileLength">
      <property name="max" value="2000"/>
      <property name="severity" value="error"/>
      <property name="fileExtensions" value="java"/>
    </module>

    <!-- don't allow tabs -->
    <module name="FileTabCharacter">
      <property name="eachLine" value="true"/>
    </module>

    <module name="RegexpSingleline">
      <property name="format" value="System\.out"/>
      <property name="severity" value="error"/>
    </module>

    <module name="RegexpSingleline">
      <property name="format" value="System\.err"/>
      <property name="severity" value="error"/>
    </module>

</module>